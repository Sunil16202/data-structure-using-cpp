Given a string, you need to remove all the duplicates. That means, the output string should contain each character only once. The respective order of characters should remain same.
Input format :
String S
Output format :
Output String
Constraints :
1 <= Length of S <= 50000
Sample Input 1 :
ababacd
Sample Output 1 :
abcd
Sample Input 2 :
abcde
Sample Output 2 :
abcde


#include<iostream>
using namespace std;
#include "solution.h"

int main() {

	char input[1000000];
	cin >> input;
	cout << uniqueChar(input) << endl;
}

#include <map>
#include<iterator>
using namespace std; 

char* uniqueChar(char *str){
    // Write your code here

    
    map<char, int> hm;
    int index=0;
    for(int i=0;str[i] != '\0';i++){
        if(hm[str[i]]==0){
            str[index++] = str[i];
            hm[str[i]]++;
        } 
    }
    str[index]='\0';
    return str;
}
