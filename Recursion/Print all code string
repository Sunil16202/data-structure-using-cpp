#include <iostream>
#include "solution.h"
using namespace std;

int main(){
    string input;
    cin >> input;

    printAllPossibleCodes(input);
    return 0;
}
#include <string.h>
using namespace std;

char getchar(int n){
    return (char)(96+n);
}

void printAllPossibleCode(string input ,string output){
    if(input.length()==0){
        cout<<output<<endl;
        return ;
    }
    
    char firstdigit = getchar(input[0]-'0');
    int firsttwodigit1=0;
    if(input.length() >= 2){
        firsttwodigit1 = (input[0]-'0')*10 + (input[1]-'0');
        
    }
    
    char firsttwodigit = getchar(firsttwodigit1);
    printAllPossibleCode(input.substr(1),output+firstdigit);
    if(firsttwodigit1 >10 && firsttwodigit1 <=26){
        printAllPossibleCode(input.substr(2), output+firsttwodigit);
        
    }
}

void printAllPossibleCodes(string input) {
    /*
    Given the input as a string, print all its possible combinations. You do not need to return anything.
    */
    
    printAllPossibleCode(input,"");
    
}

