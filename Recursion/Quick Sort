#include<iostream>
#include "Solution.h"
using namespace std;


int main(){
    int n;
    cin >> n;
  
    int *input = new int[n];
    
    for(int i = 0; i < n; i++) {
        cin >> input[i];
    }
    
    quickSort(input, n);
    for(int i = 0; i < n; i++) {
        cout << input[i] << " ";
    }
    
    delete [] input;

}


int partation(int input[], int size){
    
    int count=0;
    
    for(int i=0; i<size;i++ ){
        if(input[i]<input[0]){
            count++;
        }
    }
    
    int temp = input[0];
    input[0]=input[count];
    input[count]=temp;
    
    int i=0, j=size-1;
    while( i<count && j>count ){
        if(input[i] < input[count]){
            i++;
        }
        else if( input[j]>input[count]){
            j--;
        }
        else{
            int temp = input[i];
            input[i]=input[j];
            input[j]=temp;
            i++;
            j--;
        }
    }
    
    return count;
}



void quickSort(int input[], int size) {
  /* Don't write main().
     Don't read input, it is passed as function argument.
     Change in the given array itself.
     Taking input and printing output is handled automatically.
  */
    if(size <2){
        return ;
    }
    
    int c = partation(input , size);
    
    quickSort(input, c);
    quickSort(input+(c+1), size-c-1);
    
}
